// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/vehiclePb.proto

package cn.com.gps169.common.pb;

public final class VehiclePb {
  private VehiclePb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Vehicle extends
      com.google.protobuf.GeneratedMessage {
    // Use Vehicle.newBuilder() to construct.
    private Vehicle() {
      initFields();
    }
    private Vehicle(boolean noInit) {}
    
    private static final Vehicle defaultInstance;
    public static Vehicle getDefaultInstance() {
      return defaultInstance;
    }
    
    public Vehicle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.com.gps169.common.pb.VehiclePb.internal_static_Vehicle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.com.gps169.common.pb.VehiclePb.internal_static_Vehicle_fieldAccessorTable;
    }
    
    // required int32 vehicleId = 1;
    public static final int VEHICLEID_FIELD_NUMBER = 1;
    private boolean hasVehicleId;
    private int vehicleId_ = 0;
    public boolean hasVehicleId() { return hasVehicleId; }
    public int getVehicleId() { return vehicleId_; }
    
    // required string plateNo = 2;
    public static final int PLATENO_FIELD_NUMBER = 2;
    private boolean hasPlateNo;
    private java.lang.String plateNo_ = "";
    public boolean hasPlateNo() { return hasPlateNo; }
    public java.lang.String getPlateNo() { return plateNo_; }
    
    // required string vin = 3;
    public static final int VIN_FIELD_NUMBER = 3;
    private boolean hasVin;
    private java.lang.String vin_ = "";
    public boolean hasVin() { return hasVin; }
    public java.lang.String getVin() { return vin_; }
    
    // required string ein = 4;
    public static final int EIN_FIELD_NUMBER = 4;
    private boolean hasEin;
    private java.lang.String ein_ = "";
    public boolean hasEin() { return hasEin; }
    public java.lang.String getEin() { return ein_; }
    
    // required string simNo = 5;
    public static final int SIMNO_FIELD_NUMBER = 5;
    private boolean hasSimNo;
    private java.lang.String simNo_ = "";
    public boolean hasSimNo() { return hasSimNo; }
    public java.lang.String getSimNo() { return simNo_; }
    
    // required string terminalNo = 6;
    public static final int TERMINALNO_FIELD_NUMBER = 6;
    private boolean hasTerminalNo;
    private java.lang.String terminalNo_ = "";
    public boolean hasTerminalNo() { return hasTerminalNo; }
    public java.lang.String getTerminalNo() { return terminalNo_; }
    
    // required int32 terminalFlag = 7;
    public static final int TERMINALFLAG_FIELD_NUMBER = 7;
    private boolean hasTerminalFlag;
    private int terminalFlag_ = 0;
    public boolean hasTerminalFlag() { return hasTerminalFlag; }
    public int getTerminalFlag() { return terminalFlag_; }
    
    // required int32 terminal_status = 8;
    public static final int TERMINAL_STATUS_FIELD_NUMBER = 8;
    private boolean hasTerminalStatus;
    private int terminalStatus_ = 0;
    public boolean hasTerminalStatus() { return hasTerminalStatus; }
    public int getTerminalStatus() { return terminalStatus_; }
    
    // required string serviceStartTime = 9;
    public static final int SERVICESTARTTIME_FIELD_NUMBER = 9;
    private boolean hasServiceStartTime;
    private java.lang.String serviceStartTime_ = "";
    public boolean hasServiceStartTime() { return hasServiceStartTime; }
    public java.lang.String getServiceStartTime() { return serviceStartTime_; }
    
    // required string serviceEndTime = 10;
    public static final int SERVICEENDTIME_FIELD_NUMBER = 10;
    private boolean hasServiceEndTime;
    private java.lang.String serviceEndTime_ = "";
    public boolean hasServiceEndTime() { return hasServiceEndTime; }
    public java.lang.String getServiceEndTime() { return serviceEndTime_; }
    
    // required int32 fleeStatus = 11;
    public static final int FLEESTATUS_FIELD_NUMBER = 11;
    private boolean hasFleeStatus;
    private int fleeStatus_ = 0;
    public boolean hasFleeStatus() { return hasFleeStatus; }
    public int getFleeStatus() { return fleeStatus_; }
    
    // required int32 movingStatus = 12;
    public static final int MOVINGSTATUS_FIELD_NUMBER = 12;
    private boolean hasMovingStatus;
    private int movingStatus_ = 0;
    public boolean hasMovingStatus() { return hasMovingStatus; }
    public int getMovingStatus() { return movingStatus_; }
    
    // required int32 vehicleStatus = 13;
    public static final int VEHICLESTATUS_FIELD_NUMBER = 13;
    private boolean hasVehicleStatus;
    private int vehicleStatus_ = 0;
    public boolean hasVehicleStatus() { return hasVehicleStatus; }
    public int getVehicleStatus() { return vehicleStatus_; }
    
    // required string createdTime = 14;
    public static final int CREATEDTIME_FIELD_NUMBER = 14;
    private boolean hasCreatedTime;
    private java.lang.String createdTime_ = "";
    public boolean hasCreatedTime() { return hasCreatedTime; }
    public java.lang.String getCreatedTime() { return createdTime_; }
    
    // optional int32 userId = 15;
    public static final int USERID_FIELD_NUMBER = 15;
    private boolean hasUserId;
    private int userId_ = 0;
    public boolean hasUserId() { return hasUserId; }
    public int getUserId() { return userId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasVehicleId) return false;
      if (!hasPlateNo) return false;
      if (!hasVin) return false;
      if (!hasEin) return false;
      if (!hasSimNo) return false;
      if (!hasTerminalNo) return false;
      if (!hasTerminalFlag) return false;
      if (!hasTerminalStatus) return false;
      if (!hasServiceStartTime) return false;
      if (!hasServiceEndTime) return false;
      if (!hasFleeStatus) return false;
      if (!hasMovingStatus) return false;
      if (!hasVehicleStatus) return false;
      if (!hasCreatedTime) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasVehicleId()) {
        output.writeInt32(1, getVehicleId());
      }
      if (hasPlateNo()) {
        output.writeString(2, getPlateNo());
      }
      if (hasVin()) {
        output.writeString(3, getVin());
      }
      if (hasEin()) {
        output.writeString(4, getEin());
      }
      if (hasSimNo()) {
        output.writeString(5, getSimNo());
      }
      if (hasTerminalNo()) {
        output.writeString(6, getTerminalNo());
      }
      if (hasTerminalFlag()) {
        output.writeInt32(7, getTerminalFlag());
      }
      if (hasTerminalStatus()) {
        output.writeInt32(8, getTerminalStatus());
      }
      if (hasServiceStartTime()) {
        output.writeString(9, getServiceStartTime());
      }
      if (hasServiceEndTime()) {
        output.writeString(10, getServiceEndTime());
      }
      if (hasFleeStatus()) {
        output.writeInt32(11, getFleeStatus());
      }
      if (hasMovingStatus()) {
        output.writeInt32(12, getMovingStatus());
      }
      if (hasVehicleStatus()) {
        output.writeInt32(13, getVehicleStatus());
      }
      if (hasCreatedTime()) {
        output.writeString(14, getCreatedTime());
      }
      if (hasUserId()) {
        output.writeInt32(15, getUserId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasVehicleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getVehicleId());
      }
      if (hasPlateNo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPlateNo());
      }
      if (hasVin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVin());
      }
      if (hasEin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getEin());
      }
      if (hasSimNo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getSimNo());
      }
      if (hasTerminalNo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getTerminalNo());
      }
      if (hasTerminalFlag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getTerminalFlag());
      }
      if (hasTerminalStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getTerminalStatus());
      }
      if (hasServiceStartTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getServiceStartTime());
      }
      if (hasServiceEndTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getServiceEndTime());
      }
      if (hasFleeStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, getFleeStatus());
      }
      if (hasMovingStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getMovingStatus());
      }
      if (hasVehicleStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, getVehicleStatus());
      }
      if (hasCreatedTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(14, getCreatedTime());
      }
      if (hasUserId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, getUserId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Vehicle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.com.gps169.common.pb.VehiclePb.Vehicle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private cn.com.gps169.common.pb.VehiclePb.Vehicle result;
      
      // Construct using cn.com.gps169.common.pb.VehiclePb.Vehicle.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new cn.com.gps169.common.pb.VehiclePb.Vehicle();
        return builder;
      }
      
      protected cn.com.gps169.common.pb.VehiclePb.Vehicle internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new cn.com.gps169.common.pb.VehiclePb.Vehicle();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.com.gps169.common.pb.VehiclePb.Vehicle.getDescriptor();
      }
      
      public cn.com.gps169.common.pb.VehiclePb.Vehicle getDefaultInstanceForType() {
        return cn.com.gps169.common.pb.VehiclePb.Vehicle.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public cn.com.gps169.common.pb.VehiclePb.Vehicle build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private cn.com.gps169.common.pb.VehiclePb.Vehicle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public cn.com.gps169.common.pb.VehiclePb.Vehicle buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        cn.com.gps169.common.pb.VehiclePb.Vehicle returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.com.gps169.common.pb.VehiclePb.Vehicle) {
          return mergeFrom((cn.com.gps169.common.pb.VehiclePb.Vehicle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.com.gps169.common.pb.VehiclePb.Vehicle other) {
        if (other == cn.com.gps169.common.pb.VehiclePb.Vehicle.getDefaultInstance()) return this;
        if (other.hasVehicleId()) {
          setVehicleId(other.getVehicleId());
        }
        if (other.hasPlateNo()) {
          setPlateNo(other.getPlateNo());
        }
        if (other.hasVin()) {
          setVin(other.getVin());
        }
        if (other.hasEin()) {
          setEin(other.getEin());
        }
        if (other.hasSimNo()) {
          setSimNo(other.getSimNo());
        }
        if (other.hasTerminalNo()) {
          setTerminalNo(other.getTerminalNo());
        }
        if (other.hasTerminalFlag()) {
          setTerminalFlag(other.getTerminalFlag());
        }
        if (other.hasTerminalStatus()) {
          setTerminalStatus(other.getTerminalStatus());
        }
        if (other.hasServiceStartTime()) {
          setServiceStartTime(other.getServiceStartTime());
        }
        if (other.hasServiceEndTime()) {
          setServiceEndTime(other.getServiceEndTime());
        }
        if (other.hasFleeStatus()) {
          setFleeStatus(other.getFleeStatus());
        }
        if (other.hasMovingStatus()) {
          setMovingStatus(other.getMovingStatus());
        }
        if (other.hasVehicleStatus()) {
          setVehicleStatus(other.getVehicleStatus());
        }
        if (other.hasCreatedTime()) {
          setCreatedTime(other.getCreatedTime());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setVehicleId(input.readInt32());
              break;
            }
            case 18: {
              setPlateNo(input.readString());
              break;
            }
            case 26: {
              setVin(input.readString());
              break;
            }
            case 34: {
              setEin(input.readString());
              break;
            }
            case 42: {
              setSimNo(input.readString());
              break;
            }
            case 50: {
              setTerminalNo(input.readString());
              break;
            }
            case 56: {
              setTerminalFlag(input.readInt32());
              break;
            }
            case 64: {
              setTerminalStatus(input.readInt32());
              break;
            }
            case 74: {
              setServiceStartTime(input.readString());
              break;
            }
            case 82: {
              setServiceEndTime(input.readString());
              break;
            }
            case 88: {
              setFleeStatus(input.readInt32());
              break;
            }
            case 96: {
              setMovingStatus(input.readInt32());
              break;
            }
            case 104: {
              setVehicleStatus(input.readInt32());
              break;
            }
            case 114: {
              setCreatedTime(input.readString());
              break;
            }
            case 120: {
              setUserId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 vehicleId = 1;
      public boolean hasVehicleId() {
        return result.hasVehicleId();
      }
      public int getVehicleId() {
        return result.getVehicleId();
      }
      public Builder setVehicleId(int value) {
        result.hasVehicleId = true;
        result.vehicleId_ = value;
        return this;
      }
      public Builder clearVehicleId() {
        result.hasVehicleId = false;
        result.vehicleId_ = 0;
        return this;
      }
      
      // required string plateNo = 2;
      public boolean hasPlateNo() {
        return result.hasPlateNo();
      }
      public java.lang.String getPlateNo() {
        return result.getPlateNo();
      }
      public Builder setPlateNo(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPlateNo = true;
        result.plateNo_ = value;
        return this;
      }
      public Builder clearPlateNo() {
        result.hasPlateNo = false;
        result.plateNo_ = getDefaultInstance().getPlateNo();
        return this;
      }
      
      // required string vin = 3;
      public boolean hasVin() {
        return result.hasVin();
      }
      public java.lang.String getVin() {
        return result.getVin();
      }
      public Builder setVin(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVin = true;
        result.vin_ = value;
        return this;
      }
      public Builder clearVin() {
        result.hasVin = false;
        result.vin_ = getDefaultInstance().getVin();
        return this;
      }
      
      // required string ein = 4;
      public boolean hasEin() {
        return result.hasEin();
      }
      public java.lang.String getEin() {
        return result.getEin();
      }
      public Builder setEin(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEin = true;
        result.ein_ = value;
        return this;
      }
      public Builder clearEin() {
        result.hasEin = false;
        result.ein_ = getDefaultInstance().getEin();
        return this;
      }
      
      // required string simNo = 5;
      public boolean hasSimNo() {
        return result.hasSimNo();
      }
      public java.lang.String getSimNo() {
        return result.getSimNo();
      }
      public Builder setSimNo(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSimNo = true;
        result.simNo_ = value;
        return this;
      }
      public Builder clearSimNo() {
        result.hasSimNo = false;
        result.simNo_ = getDefaultInstance().getSimNo();
        return this;
      }
      
      // required string terminalNo = 6;
      public boolean hasTerminalNo() {
        return result.hasTerminalNo();
      }
      public java.lang.String getTerminalNo() {
        return result.getTerminalNo();
      }
      public Builder setTerminalNo(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTerminalNo = true;
        result.terminalNo_ = value;
        return this;
      }
      public Builder clearTerminalNo() {
        result.hasTerminalNo = false;
        result.terminalNo_ = getDefaultInstance().getTerminalNo();
        return this;
      }
      
      // required int32 terminalFlag = 7;
      public boolean hasTerminalFlag() {
        return result.hasTerminalFlag();
      }
      public int getTerminalFlag() {
        return result.getTerminalFlag();
      }
      public Builder setTerminalFlag(int value) {
        result.hasTerminalFlag = true;
        result.terminalFlag_ = value;
        return this;
      }
      public Builder clearTerminalFlag() {
        result.hasTerminalFlag = false;
        result.terminalFlag_ = 0;
        return this;
      }
      
      // required int32 terminal_status = 8;
      public boolean hasTerminalStatus() {
        return result.hasTerminalStatus();
      }
      public int getTerminalStatus() {
        return result.getTerminalStatus();
      }
      public Builder setTerminalStatus(int value) {
        result.hasTerminalStatus = true;
        result.terminalStatus_ = value;
        return this;
      }
      public Builder clearTerminalStatus() {
        result.hasTerminalStatus = false;
        result.terminalStatus_ = 0;
        return this;
      }
      
      // required string serviceStartTime = 9;
      public boolean hasServiceStartTime() {
        return result.hasServiceStartTime();
      }
      public java.lang.String getServiceStartTime() {
        return result.getServiceStartTime();
      }
      public Builder setServiceStartTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServiceStartTime = true;
        result.serviceStartTime_ = value;
        return this;
      }
      public Builder clearServiceStartTime() {
        result.hasServiceStartTime = false;
        result.serviceStartTime_ = getDefaultInstance().getServiceStartTime();
        return this;
      }
      
      // required string serviceEndTime = 10;
      public boolean hasServiceEndTime() {
        return result.hasServiceEndTime();
      }
      public java.lang.String getServiceEndTime() {
        return result.getServiceEndTime();
      }
      public Builder setServiceEndTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServiceEndTime = true;
        result.serviceEndTime_ = value;
        return this;
      }
      public Builder clearServiceEndTime() {
        result.hasServiceEndTime = false;
        result.serviceEndTime_ = getDefaultInstance().getServiceEndTime();
        return this;
      }
      
      // required int32 fleeStatus = 11;
      public boolean hasFleeStatus() {
        return result.hasFleeStatus();
      }
      public int getFleeStatus() {
        return result.getFleeStatus();
      }
      public Builder setFleeStatus(int value) {
        result.hasFleeStatus = true;
        result.fleeStatus_ = value;
        return this;
      }
      public Builder clearFleeStatus() {
        result.hasFleeStatus = false;
        result.fleeStatus_ = 0;
        return this;
      }
      
      // required int32 movingStatus = 12;
      public boolean hasMovingStatus() {
        return result.hasMovingStatus();
      }
      public int getMovingStatus() {
        return result.getMovingStatus();
      }
      public Builder setMovingStatus(int value) {
        result.hasMovingStatus = true;
        result.movingStatus_ = value;
        return this;
      }
      public Builder clearMovingStatus() {
        result.hasMovingStatus = false;
        result.movingStatus_ = 0;
        return this;
      }
      
      // required int32 vehicleStatus = 13;
      public boolean hasVehicleStatus() {
        return result.hasVehicleStatus();
      }
      public int getVehicleStatus() {
        return result.getVehicleStatus();
      }
      public Builder setVehicleStatus(int value) {
        result.hasVehicleStatus = true;
        result.vehicleStatus_ = value;
        return this;
      }
      public Builder clearVehicleStatus() {
        result.hasVehicleStatus = false;
        result.vehicleStatus_ = 0;
        return this;
      }
      
      // required string createdTime = 14;
      public boolean hasCreatedTime() {
        return result.hasCreatedTime();
      }
      public java.lang.String getCreatedTime() {
        return result.getCreatedTime();
      }
      public Builder setCreatedTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCreatedTime = true;
        result.createdTime_ = value;
        return this;
      }
      public Builder clearCreatedTime() {
        result.hasCreatedTime = false;
        result.createdTime_ = getDefaultInstance().getCreatedTime();
        return this;
      }
      
      // optional int32 userId = 15;
      public boolean hasUserId() {
        return result.hasUserId();
      }
      public int getUserId() {
        return result.getUserId();
      }
      public Builder setUserId(int value) {
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder clearUserId() {
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Vehicle)
    }
    
    static {
      defaultInstance = new Vehicle(true);
      cn.com.gps169.common.pb.VehiclePb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Vehicle)
  }
  
  public static final class Gps extends
      com.google.protobuf.GeneratedMessage {
    // Use Gps.newBuilder() to construct.
    private Gps() {
      initFields();
    }
    private Gps(boolean noInit) {}
    
    private static final Gps defaultInstance;
    public static Gps getDefaultInstance() {
      return defaultInstance;
    }
    
    public Gps getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.com.gps169.common.pb.VehiclePb.internal_static_Gps_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.com.gps169.common.pb.VehiclePb.internal_static_Gps_fieldAccessorTable;
    }
    
    // required double longitude = 1;
    public static final int LONGITUDE_FIELD_NUMBER = 1;
    private boolean hasLongitude;
    private double longitude_ = 0D;
    public boolean hasLongitude() { return hasLongitude; }
    public double getLongitude() { return longitude_; }
    
    // required double latitude = 2;
    public static final int LATITUDE_FIELD_NUMBER = 2;
    private boolean hasLatitude;
    private double latitude_ = 0D;
    public boolean hasLatitude() { return hasLatitude; }
    public double getLatitude() { return latitude_; }
    
    // optional string location = 3;
    public static final int LOCATION_FIELD_NUMBER = 3;
    private boolean hasLocation;
    private java.lang.String location_ = "";
    public boolean hasLocation() { return hasLocation; }
    public java.lang.String getLocation() { return location_; }
    
    // required double altitude = 4;
    public static final int ALTITUDE_FIELD_NUMBER = 4;
    private boolean hasAltitude;
    private double altitude_ = 0D;
    public boolean hasAltitude() { return hasAltitude; }
    public double getAltitude() { return altitude_; }
    
    // required double speed = 5;
    public static final int SPEED_FIELD_NUMBER = 5;
    private boolean hasSpeed;
    private double speed_ = 0D;
    public boolean hasSpeed() { return hasSpeed; }
    public double getSpeed() { return speed_; }
    
    // required string sendTime = 6;
    public static final int SENDTIME_FIELD_NUMBER = 6;
    private boolean hasSendTime;
    private java.lang.String sendTime_ = "";
    public boolean hasSendTime() { return hasSendTime; }
    public java.lang.String getSendTime() { return sendTime_; }
    
    // optional int32 direction = 7;
    public static final int DIRECTION_FIELD_NUMBER = 7;
    private boolean hasDirection;
    private int direction_ = 0;
    public boolean hasDirection() { return hasDirection; }
    public int getDirection() { return direction_; }
    
    // optional string alarmStatus = 8;
    public static final int ALARMSTATUS_FIELD_NUMBER = 8;
    private boolean hasAlarmStatus;
    private java.lang.String alarmStatus_ = "";
    public boolean hasAlarmStatus() { return hasAlarmStatus; }
    public java.lang.String getAlarmStatus() { return alarmStatus_; }
    
    // optional double mileage = 9;
    public static final int MILEAGE_FIELD_NUMBER = 9;
    private boolean hasMileage;
    private double mileage_ = 0D;
    public boolean hasMileage() { return hasMileage; }
    public double getMileage() { return mileage_; }
    
    // optional double oilNum = 10;
    public static final int OILNUM_FIELD_NUMBER = 10;
    private boolean hasOilNum;
    private double oilNum_ = 0D;
    public boolean hasOilNum() { return hasOilNum; }
    public double getOilNum() { return oilNum_; }
    
    // optional string status = 11;
    public static final int STATUS_FIELD_NUMBER = 11;
    private boolean hasStatus;
    private java.lang.String status_ = "";
    public boolean hasStatus() { return hasStatus; }
    public java.lang.String getStatus() { return status_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasLongitude) return false;
      if (!hasLatitude) return false;
      if (!hasAltitude) return false;
      if (!hasSpeed) return false;
      if (!hasSendTime) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLongitude()) {
        output.writeDouble(1, getLongitude());
      }
      if (hasLatitude()) {
        output.writeDouble(2, getLatitude());
      }
      if (hasLocation()) {
        output.writeString(3, getLocation());
      }
      if (hasAltitude()) {
        output.writeDouble(4, getAltitude());
      }
      if (hasSpeed()) {
        output.writeDouble(5, getSpeed());
      }
      if (hasSendTime()) {
        output.writeString(6, getSendTime());
      }
      if (hasDirection()) {
        output.writeInt32(7, getDirection());
      }
      if (hasAlarmStatus()) {
        output.writeString(8, getAlarmStatus());
      }
      if (hasMileage()) {
        output.writeDouble(9, getMileage());
      }
      if (hasOilNum()) {
        output.writeDouble(10, getOilNum());
      }
      if (hasStatus()) {
        output.writeString(11, getStatus());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLongitude()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getLongitude());
      }
      if (hasLatitude()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getLatitude());
      }
      if (hasLocation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getLocation());
      }
      if (hasAltitude()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getAltitude());
      }
      if (hasSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, getSpeed());
      }
      if (hasSendTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getSendTime());
      }
      if (hasDirection()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getDirection());
      }
      if (hasAlarmStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getAlarmStatus());
      }
      if (hasMileage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, getMileage());
      }
      if (hasOilNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, getOilNum());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.com.gps169.common.pb.VehiclePb.Gps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.com.gps169.common.pb.VehiclePb.Gps prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private cn.com.gps169.common.pb.VehiclePb.Gps result;
      
      // Construct using cn.com.gps169.common.pb.VehiclePb.Gps.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new cn.com.gps169.common.pb.VehiclePb.Gps();
        return builder;
      }
      
      protected cn.com.gps169.common.pb.VehiclePb.Gps internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new cn.com.gps169.common.pb.VehiclePb.Gps();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.com.gps169.common.pb.VehiclePb.Gps.getDescriptor();
      }
      
      public cn.com.gps169.common.pb.VehiclePb.Gps getDefaultInstanceForType() {
        return cn.com.gps169.common.pb.VehiclePb.Gps.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public cn.com.gps169.common.pb.VehiclePb.Gps build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private cn.com.gps169.common.pb.VehiclePb.Gps buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public cn.com.gps169.common.pb.VehiclePb.Gps buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        cn.com.gps169.common.pb.VehiclePb.Gps returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.com.gps169.common.pb.VehiclePb.Gps) {
          return mergeFrom((cn.com.gps169.common.pb.VehiclePb.Gps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.com.gps169.common.pb.VehiclePb.Gps other) {
        if (other == cn.com.gps169.common.pb.VehiclePb.Gps.getDefaultInstance()) return this;
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLocation()) {
          setLocation(other.getLocation());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasSendTime()) {
          setSendTime(other.getSendTime());
        }
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasAlarmStatus()) {
          setAlarmStatus(other.getAlarmStatus());
        }
        if (other.hasMileage()) {
          setMileage(other.getMileage());
        }
        if (other.hasOilNum()) {
          setOilNum(other.getOilNum());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setLongitude(input.readDouble());
              break;
            }
            case 17: {
              setLatitude(input.readDouble());
              break;
            }
            case 26: {
              setLocation(input.readString());
              break;
            }
            case 33: {
              setAltitude(input.readDouble());
              break;
            }
            case 41: {
              setSpeed(input.readDouble());
              break;
            }
            case 50: {
              setSendTime(input.readString());
              break;
            }
            case 56: {
              setDirection(input.readInt32());
              break;
            }
            case 66: {
              setAlarmStatus(input.readString());
              break;
            }
            case 73: {
              setMileage(input.readDouble());
              break;
            }
            case 81: {
              setOilNum(input.readDouble());
              break;
            }
            case 90: {
              setStatus(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required double longitude = 1;
      public boolean hasLongitude() {
        return result.hasLongitude();
      }
      public double getLongitude() {
        return result.getLongitude();
      }
      public Builder setLongitude(double value) {
        result.hasLongitude = true;
        result.longitude_ = value;
        return this;
      }
      public Builder clearLongitude() {
        result.hasLongitude = false;
        result.longitude_ = 0D;
        return this;
      }
      
      // required double latitude = 2;
      public boolean hasLatitude() {
        return result.hasLatitude();
      }
      public double getLatitude() {
        return result.getLatitude();
      }
      public Builder setLatitude(double value) {
        result.hasLatitude = true;
        result.latitude_ = value;
        return this;
      }
      public Builder clearLatitude() {
        result.hasLatitude = false;
        result.latitude_ = 0D;
        return this;
      }
      
      // optional string location = 3;
      public boolean hasLocation() {
        return result.hasLocation();
      }
      public java.lang.String getLocation() {
        return result.getLocation();
      }
      public Builder setLocation(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLocation = true;
        result.location_ = value;
        return this;
      }
      public Builder clearLocation() {
        result.hasLocation = false;
        result.location_ = getDefaultInstance().getLocation();
        return this;
      }
      
      // required double altitude = 4;
      public boolean hasAltitude() {
        return result.hasAltitude();
      }
      public double getAltitude() {
        return result.getAltitude();
      }
      public Builder setAltitude(double value) {
        result.hasAltitude = true;
        result.altitude_ = value;
        return this;
      }
      public Builder clearAltitude() {
        result.hasAltitude = false;
        result.altitude_ = 0D;
        return this;
      }
      
      // required double speed = 5;
      public boolean hasSpeed() {
        return result.hasSpeed();
      }
      public double getSpeed() {
        return result.getSpeed();
      }
      public Builder setSpeed(double value) {
        result.hasSpeed = true;
        result.speed_ = value;
        return this;
      }
      public Builder clearSpeed() {
        result.hasSpeed = false;
        result.speed_ = 0D;
        return this;
      }
      
      // required string sendTime = 6;
      public boolean hasSendTime() {
        return result.hasSendTime();
      }
      public java.lang.String getSendTime() {
        return result.getSendTime();
      }
      public Builder setSendTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder clearSendTime() {
        result.hasSendTime = false;
        result.sendTime_ = getDefaultInstance().getSendTime();
        return this;
      }
      
      // optional int32 direction = 7;
      public boolean hasDirection() {
        return result.hasDirection();
      }
      public int getDirection() {
        return result.getDirection();
      }
      public Builder setDirection(int value) {
        result.hasDirection = true;
        result.direction_ = value;
        return this;
      }
      public Builder clearDirection() {
        result.hasDirection = false;
        result.direction_ = 0;
        return this;
      }
      
      // optional string alarmStatus = 8;
      public boolean hasAlarmStatus() {
        return result.hasAlarmStatus();
      }
      public java.lang.String getAlarmStatus() {
        return result.getAlarmStatus();
      }
      public Builder setAlarmStatus(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAlarmStatus = true;
        result.alarmStatus_ = value;
        return this;
      }
      public Builder clearAlarmStatus() {
        result.hasAlarmStatus = false;
        result.alarmStatus_ = getDefaultInstance().getAlarmStatus();
        return this;
      }
      
      // optional double mileage = 9;
      public boolean hasMileage() {
        return result.hasMileage();
      }
      public double getMileage() {
        return result.getMileage();
      }
      public Builder setMileage(double value) {
        result.hasMileage = true;
        result.mileage_ = value;
        return this;
      }
      public Builder clearMileage() {
        result.hasMileage = false;
        result.mileage_ = 0D;
        return this;
      }
      
      // optional double oilNum = 10;
      public boolean hasOilNum() {
        return result.hasOilNum();
      }
      public double getOilNum() {
        return result.getOilNum();
      }
      public Builder setOilNum(double value) {
        result.hasOilNum = true;
        result.oilNum_ = value;
        return this;
      }
      public Builder clearOilNum() {
        result.hasOilNum = false;
        result.oilNum_ = 0D;
        return this;
      }
      
      // optional string status = 11;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public java.lang.String getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = getDefaultInstance().getStatus();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Gps)
    }
    
    static {
      defaultInstance = new Gps(true);
      cn.com.gps169.common.pb.VehiclePb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Gps)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Vehicle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Vehicle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Gps_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Gps_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026protos/vehiclePb.proto\"\261\002\n\007Vehicle\022\021\n\t" +
      "vehicleId\030\001 \002(\005\022\017\n\007plateNo\030\002 \002(\t\022\013\n\003vin\030" +
      "\003 \002(\t\022\013\n\003ein\030\004 \002(\t\022\r\n\005simNo\030\005 \002(\t\022\022\n\nter" +
      "minalNo\030\006 \002(\t\022\024\n\014terminalFlag\030\007 \002(\005\022\027\n\017t" +
      "erminal_status\030\010 \002(\005\022\030\n\020serviceStartTime" +
      "\030\t \002(\t\022\026\n\016serviceEndTime\030\n \002(\t\022\022\n\nfleeSt" +
      "atus\030\013 \002(\005\022\024\n\014movingStatus\030\014 \002(\005\022\025\n\rvehi" +
      "cleStatus\030\r \002(\005\022\023\n\013createdTime\030\016 \002(\t\022\016\n\006" +
      "userId\030\017 \001(\005\"\310\001\n\003Gps\022\021\n\tlongitude\030\001 \002(\001\022" +
      "\020\n\010latitude\030\002 \002(\001\022\020\n\010location\030\003 \001(\t\022\020\n\010a",
      "ltitude\030\004 \002(\001\022\r\n\005speed\030\005 \002(\001\022\020\n\010sendTime" +
      "\030\006 \002(\t\022\021\n\tdirection\030\007 \001(\005\022\023\n\013alarmStatus" +
      "\030\010 \001(\t\022\017\n\007mileage\030\t \001(\001\022\016\n\006oilNum\030\n \001(\001\022" +
      "\016\n\006status\030\013 \001(\tB\031\n\027cn.com.gps169.common." +
      "pb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Vehicle_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Vehicle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Vehicle_descriptor,
              new java.lang.String[] { "VehicleId", "PlateNo", "Vin", "Ein", "SimNo", "TerminalNo", "TerminalFlag", "TerminalStatus", "ServiceStartTime", "ServiceEndTime", "FleeStatus", "MovingStatus", "VehicleStatus", "CreatedTime", "UserId", },
              cn.com.gps169.common.pb.VehiclePb.Vehicle.class,
              cn.com.gps169.common.pb.VehiclePb.Vehicle.Builder.class);
          internal_static_Gps_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Gps_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Gps_descriptor,
              new java.lang.String[] { "Longitude", "Latitude", "Location", "Altitude", "Speed", "SendTime", "Direction", "AlarmStatus", "Mileage", "OilNum", "Status", },
              cn.com.gps169.common.pb.VehiclePb.Gps.class,
              cn.com.gps169.common.pb.VehiclePb.Gps.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
