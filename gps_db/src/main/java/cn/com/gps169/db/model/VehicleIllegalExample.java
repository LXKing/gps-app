package cn.com.gps169.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class VehicleIllegalExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected int limitEnd = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public VehicleIllegalExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIllegalIdIsNull() {
            addCriterion("illegal_id is null");
            return (Criteria) this;
        }

        public Criteria andIllegalIdIsNotNull() {
            addCriterion("illegal_id is not null");
            return (Criteria) this;
        }

        public Criteria andIllegalIdEqualTo(Integer value) {
            addCriterion("illegal_id =", value, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdNotEqualTo(Integer value) {
            addCriterion("illegal_id <>", value, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdGreaterThan(Integer value) {
            addCriterion("illegal_id >", value, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("illegal_id >=", value, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdLessThan(Integer value) {
            addCriterion("illegal_id <", value, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdLessThanOrEqualTo(Integer value) {
            addCriterion("illegal_id <=", value, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdIn(List<Integer> values) {
            addCriterion("illegal_id in", values, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdNotIn(List<Integer> values) {
            addCriterion("illegal_id not in", values, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdBetween(Integer value1, Integer value2) {
            addCriterion("illegal_id between", value1, value2, "illegalId");
            return (Criteria) this;
        }

        public Criteria andIllegalIdNotBetween(Integer value1, Integer value2) {
            addCriterion("illegal_id not between", value1, value2, "illegalId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdIsNull() {
            addCriterion("vehicle_id is null");
            return (Criteria) this;
        }

        public Criteria andVehicleIdIsNotNull() {
            addCriterion("vehicle_id is not null");
            return (Criteria) this;
        }

        public Criteria andVehicleIdEqualTo(Integer value) {
            addCriterion("vehicle_id =", value, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdNotEqualTo(Integer value) {
            addCriterion("vehicle_id <>", value, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdGreaterThan(Integer value) {
            addCriterion("vehicle_id >", value, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("vehicle_id >=", value, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdLessThan(Integer value) {
            addCriterion("vehicle_id <", value, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdLessThanOrEqualTo(Integer value) {
            addCriterion("vehicle_id <=", value, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdIn(List<Integer> values) {
            addCriterion("vehicle_id in", values, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdNotIn(List<Integer> values) {
            addCriterion("vehicle_id not in", values, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdBetween(Integer value1, Integer value2) {
            addCriterion("vehicle_id between", value1, value2, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andVehicleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("vehicle_id not between", value1, value2, "vehicleId");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeIsNull() {
            addCriterion("illegal_time is null");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeIsNotNull() {
            addCriterion("illegal_time is not null");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeEqualTo(Date value) {
            addCriterion("illegal_time =", value, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeNotEqualTo(Date value) {
            addCriterion("illegal_time <>", value, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeGreaterThan(Date value) {
            addCriterion("illegal_time >", value, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("illegal_time >=", value, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeLessThan(Date value) {
            addCriterion("illegal_time <", value, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeLessThanOrEqualTo(Date value) {
            addCriterion("illegal_time <=", value, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeIn(List<Date> values) {
            addCriterion("illegal_time in", values, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeNotIn(List<Date> values) {
            addCriterion("illegal_time not in", values, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeBetween(Date value1, Date value2) {
            addCriterion("illegal_time between", value1, value2, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andIllegalTimeNotBetween(Date value1, Date value2) {
            addCriterion("illegal_time not between", value1, value2, "illegalTime");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailIsNull() {
            addCriterion("illegal_detail is null");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailIsNotNull() {
            addCriterion("illegal_detail is not null");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailEqualTo(String value) {
            addCriterion("illegal_detail =", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailNotEqualTo(String value) {
            addCriterion("illegal_detail <>", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailGreaterThan(String value) {
            addCriterion("illegal_detail >", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailGreaterThanOrEqualTo(String value) {
            addCriterion("illegal_detail >=", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailLessThan(String value) {
            addCriterion("illegal_detail <", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailLessThanOrEqualTo(String value) {
            addCriterion("illegal_detail <=", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailLike(String value) {
            addCriterion("illegal_detail like", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailNotLike(String value) {
            addCriterion("illegal_detail not like", value, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailIn(List<String> values) {
            addCriterion("illegal_detail in", values, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailNotIn(List<String> values) {
            addCriterion("illegal_detail not in", values, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailBetween(String value1, String value2) {
            addCriterion("illegal_detail between", value1, value2, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalDetailNotBetween(String value1, String value2) {
            addCriterion("illegal_detail not between", value1, value2, "illegalDetail");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeIsNull() {
            addCriterion("illegal_flee is null");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeIsNotNull() {
            addCriterion("illegal_flee is not null");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeEqualTo(Integer value) {
            addCriterion("illegal_flee =", value, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeNotEqualTo(Integer value) {
            addCriterion("illegal_flee <>", value, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeGreaterThan(Integer value) {
            addCriterion("illegal_flee >", value, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeGreaterThanOrEqualTo(Integer value) {
            addCriterion("illegal_flee >=", value, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeLessThan(Integer value) {
            addCriterion("illegal_flee <", value, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeLessThanOrEqualTo(Integer value) {
            addCriterion("illegal_flee <=", value, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeIn(List<Integer> values) {
            addCriterion("illegal_flee in", values, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeNotIn(List<Integer> values) {
            addCriterion("illegal_flee not in", values, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeBetween(Integer value1, Integer value2) {
            addCriterion("illegal_flee between", value1, value2, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalFleeNotBetween(Integer value1, Integer value2) {
            addCriterion("illegal_flee not between", value1, value2, "illegalFlee");
            return (Criteria) this;
        }

        public Criteria andIllegalNumIsNull() {
            addCriterion("illegal_num is null");
            return (Criteria) this;
        }

        public Criteria andIllegalNumIsNotNull() {
            addCriterion("illegal_num is not null");
            return (Criteria) this;
        }

        public Criteria andIllegalNumEqualTo(Byte value) {
            addCriterion("illegal_num =", value, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumNotEqualTo(Byte value) {
            addCriterion("illegal_num <>", value, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumGreaterThan(Byte value) {
            addCriterion("illegal_num >", value, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumGreaterThanOrEqualTo(Byte value) {
            addCriterion("illegal_num >=", value, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumLessThan(Byte value) {
            addCriterion("illegal_num <", value, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumLessThanOrEqualTo(Byte value) {
            addCriterion("illegal_num <=", value, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumIn(List<Byte> values) {
            addCriterion("illegal_num in", values, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumNotIn(List<Byte> values) {
            addCriterion("illegal_num not in", values, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumBetween(Byte value1, Byte value2) {
            addCriterion("illegal_num between", value1, value2, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andIllegalNumNotBetween(Byte value1, Byte value2) {
            addCriterion("illegal_num not between", value1, value2, "illegalNum");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIsNull() {
            addCriterion("created_time is null");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIsNotNull() {
            addCriterion("created_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeEqualTo(Date value) {
            addCriterion("created_time =", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotEqualTo(Date value) {
            addCriterion("created_time <>", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeGreaterThan(Date value) {
            addCriterion("created_time >", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("created_time >=", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeLessThan(Date value) {
            addCriterion("created_time <", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("created_time <=", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIn(List<Date> values) {
            addCriterion("created_time in", values, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotIn(List<Date> values) {
            addCriterion("created_time not in", values, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeBetween(Date value1, Date value2) {
            addCriterion("created_time between", value1, value2, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("created_time not between", value1, value2, "createdTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vehicle_illegal
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vehicle_illegal
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}